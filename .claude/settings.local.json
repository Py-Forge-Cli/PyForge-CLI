{
  "permissions": {
    "allow": [
      "Bash(git pull:*)",
      "Bash(PYTHONPATH=/Users/santoshdandey/Documents/code/PyForge-CLI/src python tests/test_databricks_extension.py)",
      "Bash(export PYARROW_IGNORE_TIMEZONE=1)",
      "Bash(python:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git fetch:*)",
      "Bash(git ls-tree:*)",
      "Bash(git merge:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(unset:*)",
      "Bash(java:*)",
      "Bash(echo $JAVA_HOME)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "WebFetch(domain:learn.microsoft.com)",
      "Bash(uv pip sync:*)",
      "Bash(pip install:*)",
      "Bash(source:*)",
      "WebFetch(domain:github.com)",
      "Bash(make test-env:*)",
      "Bash(true)",
      "Bash(pytest:*)",
      "Bash(/dev/null)",
      "Bash(find:*)",
      "Bash(make test:*)",
      "Bash(.venv/bin/pytest tests/test_csv_converter.py::TestCSVConverter::test_csv_conversion_no_header -xvs)",
      "Bash(.venv/bin/pytest tests/test_csv_integration.py::TestCSVConverterIntegration::test_csv_conversion_via_cli -xvs)",
      "Bash(.venv/bin/pyforge:*)",
      "Bash(.venv/bin/pytest tests/test_csv_integration.py -xvs)",
      "Bash(.venv/bin/pytest tests/test_csv_integration.py -v)",
      "Bash(.venv/bin/pytest tests/test_database_converters.py::TestMDBConverter::test_input_validation -xvs)",
      "Bash(.venv/bin/pytest tests/test_database_converters.py::TestMDBConverter::test_input_validation tests/test_database_converters.py::TestDBFConverter::test_input_validation -xvs)",
      "Bash(.venv/bin/pytest tests/test_database_converters.py::TestConverterIntegration::test_file_detection_integration -xvs)",
      "Bash(.venv/bin/pytest tests/test_enhanced_mdb_converter.py -k \"test_connect_to_database_success or test_validate_input_valid_mdb\" -xvs)",
      "Bash(.venv/bin/pytest tests/test_enhanced_mdb_converter.py::TestEnhancedMDBConverter::test_validate_input_valid_mdb -xvs)",
      "Bash(.venv/bin/pytest tests/test_enhanced_mdb_converter.py -k \"test_connect_to_database_success or test_validate_input_valid_mdb or test_backend_selection_ucanaccess_preferred or test_convert_with_progress_structure\" -v)",
      "Bash(.venv/bin/pytest tests/test_enhanced_mdb_converter.py::TestEnhancedMDBConverterIntegration::test_convert_with_progress_structure -xvs)",
      "Bash(.venv/bin/python -m pytest:*)",
      "Bash(.venv/bin/python -c \"\nimport sys\nsys.path.insert(0, ''src'')\nimport pytest\npytest.main([''-xvs'', ''--tb=auto'', ''tests/test_enhanced_mdb_converter.py::TestEnhancedMDBConverterIntegration::test_convert_with_progress_structure''])\n\")",
      "Bash(.venv/bin/python:*)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py::TestExtensionIntegration::test_extension_hooks_in_convert -v)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py -v)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py::TestExtensionIntegration::test_extension_hooks_in_convert -v -s)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py::TestExtensionIntegration::test_extension_hooks_in_convert -v -s --tb=short)",
      "Bash(.venv/bin/pytest -m \"not databricks\" --cov=pyforge_cli --cov-report=html --cov-report=term-missing)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py -v --tb=short)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py::TestExtensionIntegration::test_verbose_logging -v --tb=short)",
      "Bash(.testenv/bin/pytest tests/test_extension_integration.py -v)",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py -v)",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py -v -s)",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py::TestPySparkCSVConverter::test_pyspark_availability_detection -v -s --tb=short)",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py -v --tb=short -m \"databricks\")",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py -v -rs)",
      "Bash(.venv/bin/pytest tests/test_pyspark_csv_converter.py -v --run-pyspark)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py tests/test_pyspark_csv_converter.py -v --run-pyspark --cov=pyforge_cli --cov-report=term-missing)",
      "Bash(.venv/bin/pytest:*)",
      "Bash(.venv/bin/pytest *)",
      "Bash(.testenv/bin/pytest *)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py tests/test_pyspark_csv_converter.py -v --run-pyspark --cov=pyforge_cli --cov-report=term-missing)",
      "Bash(.venv/bin/pytest tests/test_main_cli.py tests/test_pdf_converter_unit.py tests/test_excel_converter_unit.py tests/test_xml_converter_unit.py -v --cov=pyforge_cli --cov-report=term-missing)",
      "Bash(.venv/bin/pytest tests/test_main_cli.py tests/test_pdf_converter_unit.py tests/test_excel_converter_unit.py tests/test_xml_converter_unit.py tests/test_mdb_converter_unit.py -v --cov=pyforge_cli.main --cov=pyforge_cli.converters.pdf_converter --cov=pyforge_cli.converters.excel_converter --cov=pyforge_cli.converters.xml --cov=pyforge_cli.converters.mdb_converter --cov-report=term-missing --tb=short -x)",
      "Bash(.venv/bin/pytest tests/test_main_cli.py tests/test_pdf_converter_unit.py tests/test_excel_converter_unit.py tests/test_xml_converter_unit.py tests/test_mdb_converter_unit.py -v --cov=pyforge_cli --cov-report=term-missing --tb=short --no-cov-on-fail)",
      "Bash(.venv/bin/pytest tests/test_extension_integration.py tests/test_pyspark_csv_converter.py tests/test_main_cli.py tests/test_pdf_converter_unit.py tests/test_excel_converter_unit.py tests/test_xml_converter_unit.py tests/test_mdb_converter_unit.py -v --run-pyspark --cov=pyforge_cli --cov-report=term)",
      "Bash(uv sync:*)",
      "Bash(brew install:*)",
      "Bash(port install:*)",
      "Bash(sudo port:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv pip install:*)",
      "Bash(conda install:*)",
      "Bash(uv pip:*)",
      "Bash(.venv/bin/pip:*)",
      "Bash(uv run:*)",
      "Bash(make:*)",
      "Bash(.venv/bin/pytest tests/test_main_cli.py -v)",
      "Bash(.venv/bin/pytest --tb=no -q --ignore=tests/test_databricks_extension.py --ignore=tests/test_extension_integration.py --ignore=tests/test_extension_system.py --ignore=tests/test_pyspark_csv_converter.py)",
      "WebFetch(domain:docs.databricks.com)",
      "Bash(cat:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr list:*)",
      "Bash(pyforge:*)",
      "Bash(.venv/bin/pytest -v -k \"test_get_info\" --tb=short)",
      "Bash(.venv/bin/pytest -v tests/test_excel_converter_improved.py::TestExcelConverterImproved::test_get_info_basic -s)",
      "Bash(.venv/bin/pytest -v tests/ -k \"test_get_info\" --tb=short)",
      "Bash(.venv/bin/pytest -v --tb=short)"
    ],
    "deny": []
  },
  "toolSettings": {
    "bash": {
      "allowedCommands": [
        "pytest",
        "pytest -v",
        "pytest -vv",
        "pytest --tb=short",
        "pytest --tb=line",
        "pytest -x",
        "pytest --version",
        "python -m pytest",
        "python3 -m pytest",
        "make test",
        "make test-quick",
        "make test-all",
        "make test-cov",
        "make test-report",
        "make lint",
        "make format",
        "make type-check",
        "ruff check src/ tests/",
        "ruff check --fix src/ tests/",
        "black src/ tests/",
        "black --check src/ tests/",
        "mypy src/",
        "pip list",
        "pip show pytest",
        "pip show pyforge-cli",
        "pyforge --version",
        "pyforge --help"
      ],
      "allowedPatterns": [
        "^pytest\\s+.*",
        "^python3?\\s+-m\\s+pytest\\s+.*",
        "^pytest\\s+-[kvxm]\\s+.*",
        "^pytest\\s+--cov.*",
        "^pytest\\s+--html.*",
        "^pytest\\s+--json.*",
        "^pytest\\s+--junit.*",
        "^pytest\\s+tests/.*",
        "^\\.venv/bin/pytest\\s+.*",
        "^\\.testenv/bin/pytest\\s+.*",
        "^\\.venv/bin/pytest.*\\|.*",
        "^\\.testenv/bin/pytest.*\\|.*",
        "^.*pytest.*",
        "^make\\s+test.*",
        "^ruff\\s+check.*",
        "^black\\s+--check.*",
        "^mypy\\s+.*",
        "^pip\\s+show\\s+.*",
        "^pip\\s+list.*",
        "^pyforge\\s+--.*",
        "^\\.venv/bin/pyforge\\s+.*"
      ]
    }
  }
}