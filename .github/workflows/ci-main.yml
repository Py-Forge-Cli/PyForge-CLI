name: CI Main Branch (Bug Fixes)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"
          
      - name: Run linting
        run: |
          ruff check src/ tests/
          
      - name: Run formatting check
        run: |
          black --check src/ tests/
          
      - name: Run type checking
        run: |
          mypy src/

  test:
    runs-on: ubuntu-latest
    needs: quality-checks
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test,all]"
          
      - name: Run stability tests
        run: |
          # Focus on core functionality and regression tests
          pytest tests/ -m "not slow and not integration" \
            --run-pyspark \
            --cov=pyforge_cli \
            --cov-report=term-missing \
            --cov-report=xml \
            -v
            
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v4

  security:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
          
      - name: Run security checks
        run: |
          bandit -r src/ -f json -o bandit-report.json
          safety check --json --output safety-report.json
          
  publish-testpypi:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test, security]
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build package
        run: |
          python -m build
          
      - name: Show version
        run: |
          python -c "import setuptools_scm; print(f'Version: {setuptools_scm.get_version()}')"
          
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true